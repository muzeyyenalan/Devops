<<<<<<< HEAD
- name: configure postgresql node
  hosts: _ansible_postgresql
  become: true
  vars_files:
    - secret.yml
  tasks:  
    - name: update the node
      yum: 
        name: '*'
        state:  latest

    - name: uninstall old versions
      yum:
        name: "{{ item }}"
        state: removed
      loop:
=======
- name: Install docker
  gather_facts: No
  any_errors_fatal: true
  hosts: _ansible_postgresql
  become: true
  vars_files:
    - secret.yaml
  tasks:
    - name: upgrade all packages
      yum: 
        name: '*'
        state: latest
    #Â we may need to uninstall any existing docker files from the centos repo first. 
    - name: Remove docker if installed from CentOS repo
      yum:
        name: "{{ item }}"
        state: removed
      with_items:
>>>>>>> 4707fda649deb1e7747f84db978d40ed37adb617
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine
<<<<<<< HEAD
    - name: install yum-utils
      yum:
        name: yum-utils
        state: latest
    - name: add docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
    - name: install docker
      package:
        name: docker-ce
        state: latest 

    - name:  install pip
      package:  
        name: python3-pip
        state:  present

    - name: install docker sdk
      pip:
        name: docker
    - name: add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker 
        append: yes

    - name: start docker service
      systemd:  
        name: docker
        enabled: yes
        state:  started
    
=======
    - name: Install yum utils
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - yum-utils
  # yum-utils is a collection of tools and programs for managing yum repositories, installing debug packages, source packages, extended information from repositories and administration.
    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
    - name: Install Docker
      package:
        name: docker-ce
        state: latest
    - name: Install pip
      package: 
        name: python3-pip
        state: present
        update_cache: true
    - name: Install docker sdk
      pip:
        name: docker
    - name: Add user ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes
    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes
>>>>>>> 4707fda649deb1e7747f84db978d40ed37adb617
    - name: create build directory
      file:
        path: /home/ec2-user/postgresql
        state: directory
<<<<<<< HEAD
        owner:  root
        group:  root
        mode: "0755"

    - name: copy the sql scpipt
      copy:
        src: /home/ec2-user/ansible/ansible-Project/postgres/init.sql
        dest: /home/ec2-user/postgresql 

    - name: copy the docker file
      copy:
        src: /home/ec2-user/ansible/ansible-Project/postgres/Dockerfile
        dest: /home/ec2-user/postgresql

    - name: remove container and image if exist
      shell: "docker ps -q --filter 'name=muzeyyen_postgre' && docker stop muzeyyen_postgre && docker rm -fv muzeyyen_postgre && docker image rm -f muzeyyencw/postgre || echo 'Not Found'"

    - name: build container image
      docker_image:
        name: muzeyyencw/postgre
        build:
          path: /home/ec2-user/postgresql
        source: build
        state:  present

    - name: create postgresql docker container
      docker_container: 
        name: muzeyyen_postgre
        image:  muzeyyencw/postgre
        state:  started
        ports:
          - "5432:5432"
        env:  
          POSTGRES_PASSWORD: "{{ password }}"
        volumes:
          - /db_data:/var/lib/postgresql/data
      register: container_info

    - name: print the container container_info
      debug:
        var:  container_info

=======
        owner: root
        group: root
        mode: '0755'
    - name: copy the sql script
      copy:
        src: /home/ec2-user/ansible-project/postgres/init.sql
        dest: /home/ec2-user/postgresql
    - name: copy the Dockerfile
      copy:
        src: /home/ec2-user/ansible-project/postgres/Dockerfile
        dest: /home/ec2-user/postgresql
    - name: remove cla_postgre container and clacw/postgre if exists
      shell: "docker ps -q --filter 'name=cla_postgre' && docker stop cla_postgre && docker rm -fv cla_postgre && docker image rm -f clacw/postgre || echo 'Not Found'"
    - name: build container image
      docker_image:
        name: clacw/postgre
        build:
          path: /home/ec2-user/postgresql
        source: build
        state: present
    - name: Launch postgresql docker container
      docker_container:
        name: cla_postgre
        image: clacw/postgre
        state: started
        ports: 
        - "5432:5432"
        env:
          POSTGRES_PASSWORD: "{{password}}"
        volumes:
          - /db-data:/var/lib/postgresql/data
      register: container_info
    
    - name: print the container info
      debug:
        var: container_info

    
>>>>>>> 4707fda649deb1e7747f84db978d40ed37adb617
